✨ 87 rules replaced with their ESLint equivalents. ✨

❗ 8 ESLint rules behave differently from their TSLint counterparts ❗
  * one-var:
    - Variables declared in for loops will no longer be checked.
  * no-unused-expressions:
    - The TSLint optional config "allow-new" is the default ESLint behavior and will no longer be ignored.
  * no-invalid-this:
    - Functions in methods will no longer be ignored.
  * prefer-arrow/prefer-arrow-functions:
    - ESLint does not support allowing standalone function declarations.
    - ESLint does not support allowing named functions defined with the function keyword.
  * eqeqeq:
    - Option "smart" allows for comparing two literal values, evaluating the value of typeof and null comparisons.
  * camelcase:
    - Leading undescores in variable names will now be ignored.
    - ESLint's camel-case rule does not allow pascal or snake case variable names. Those cases are reserved for class names and static methods.
  * no-underscore-dangle:
    - Leading and trailing underscores (_) on identifiers will now be ignored.
  * no-redeclare:
    - ESLint does not support check-parameters.

❌ 1 error thrown. ❌
  Check ./tslint-to-eslint-config.log for details.
 ️
❓ 28 rules do not yet have ESLint equivalents ❓
  See generated log file; defaulting to eslint-plugin-tslint for these rules.

⚡ 3 packages are required for new ESLint rules. ⚡
  import
  eslint-plugin-import
  prefer-arrow

 ️
❓ 6 editor settings do not yet have ESLint equivalents ❓
  See generated log file.
✅ All is well! ✅